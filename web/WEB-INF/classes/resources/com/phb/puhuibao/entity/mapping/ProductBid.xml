<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.phb.puhuibao.entity.ProductBid">
  <!-- RESOURCE RESULTMAP -->
  <resultMap id="resourceResultMap" type="com.phb.puhuibao.entity.ProductBid">
    <id property="bidId" column="bid_id" jdbcType="INTEGER" />
    <result property="bidSN" column="bid_sn" jdbcType="VARCHAR"/>
    <result property="productSN" column="product_sn" jdbcType="VARCHAR"/>
    <result property="startDate" column="start_date" jdbcType="DATE"/>
    <result property="endDate" column="end_date" jdbcType="DATE"/>
    <result property="currentAmount" column="current_amount" jdbcType="BIGINT"/>
    <result property="totalAmount" column="total_amount" jdbcType="BIGINT"/>
  </resultMap>
  
  <!-- RESOURCE INSERT -->
  <insert id="insert" useGeneratedKeys="true" keyProperty="bidId" parameterType="com.phb.puhuibao.entity.ProductBid">
    insert into phb_product_bid (<include refid="allapplColumn"/>) <include refid="allapplColumnVar"/>
  </insert>
  <!-- RESOURCE UPDATE -->
  <update id="update" parameterType="com.phb.puhuibao.entity.ProductBid">
		update phb_product_bid
		<trim prefix=" SET " prefixOverrides=",">
			<if test="bidSN != null">
				  ,bid_sn=#{bidSN,jdbcType=VARCHAR}
			</if>
			<if test="productSN != null">
				  ,product_sn=#{productSN,jdbcType=VARCHAR}
			</if>
			<if test="startDate != null">
				  ,start_date=#{startDate,jdbcType=DATE}
			</if>
			<if test="endDate != null">
				  ,end_date=#{endDate,jdbcType=DATE}
			</if>
			<if test="currentAmount != null">
				  ,current_amount=#{currentAmount,jdbcType=BIGINT}
			</if>
			<if test="totalAmount != null">
				  ,total_amount=#{totalAmount,jdbcType=BIGINT}
			</if>
			<if test="status != null">
				  ,status=#{status,jdbcType=DATE}
			</if>
		</trim>
		where bid_id=#{bidId}
  </update>

  <!-- RESOURCE DELETE -->
  <delete id="delete" parameterType="com.phb.puhuibao.entity.ProductBid">
    delete from phb_product_bid where bid_id=#{bidId}
  </delete>
  
  <!-- RESOURCE SELECT -->
  <select id="query" parameterType="java.util.Map" resultMap="resourceResultMap">
    select <include refid="allColumn" /> from phb_product_bid a left join phb_asset_product b on a.product_sn=b.product_sn <include refid="dynamicWhere" />
  </select>
  <select id="findByPager" parameterType="java.util.Map" resultMap="resourceResultMap">
    <include refid="queryBody" />
  </select>
  <select id="findByPagerCount" parameterType="java.util.Map" resultType="int" >
	select count(1) from phb_product_bid a left join phb_asset_product b on a.product_sn=b.product_sn <include refid="dynamicWhere" />
  </select>
  <select id="unique" parameterType="java.util.Map" resultMap="resourceResultMap" >
	select <include refid="allColumn" /> from phb_product_bid a left join phb_asset_product b on a.product_sn=b.product_sn <include refid="dynamicWhere" /> limit 1
  </select>
  <select id="getById" parameterType="java.util.Map" resultMap="resourceResultMap">
	select <include refid="allColumn" /> from phb_product_bid a left join phb_asset_product b on a.product_sn=b.product_sn where bid_id=#{bidId}
  </select>

  <!-- MySQL specific -->
  <sql id="allapplColumn">
    bid_sn,
    product_sn,
    start_date,
    end_date,
    total_amount
  </sql>
  <sql id="allapplColumnVar">
	values(
			#{bidSN,jdbcType=VARCHAR},
			#{productSN,jdbcType=VARCHAR},
			#{startDate,jdbcType=DATE},
			#{endDate,jdbcType=DATE},
			#{totalAmount,jdbcType=BIGINT}
	)
  </sql>
  <sql id="allColumn">
    a.bid_id,
    a.bid_sn,
    a.product_sn,
    a.start_date,
    a.end_date,
    a.current_amount,
    a.total_amount,
    a.status,
    b.type
  </sql>
  
 <sql id="allColumnwithalertflag">
    a.bid_id,
    a.bid_sn,
    a.product_sn,
    a.start_date,
    a.end_date,
    a.current_amount,
    a.total_amount,
    CASE
                WHEN alert.alert_deviceid IS NOT  NULL THEN  6
                ELSE a.status
    END AS status,
    b.type
  </sql>
  <sql id="dynamicWhere">
	<trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="querykeyword != null">
			AND a.product_sn like concat('%',#{querykeyword},'%') 
		</if>
		<if test="productSN != null">
			AND a.product_sn = #{productSN}
		</if>
		<if test="bidSN != null">
			AND bid_sn = #{bidSN}
		</if>
		<if test="status != null">
			AND a.status = #{status}
		</if>
		<if test="lstatus != null">
			AND a.status <![CDATA[<]]> #{lstatus}
		</if>
		<if test="gendDate != null">
			AND end_date <![CDATA[>]]> #{gendDate}
		</if>
		<if test="type != null">
			AND b.type = #{type}
		</if>
		<if test="getype != null">
			AND b.type <![CDATA[>]]>= #{getype}
		</if>
	</trim>
  </sql>
  <sql id="dynamicOrderBy">
	<if test="orderBy!=null">
		order by ${orderBy}
		<if test="order!=null">
			${order}
		</if>
	</if>
  </sql>

  <sql id="queryBody">
	<if test="sno!=null and eno!=null and orderBy!=null">
		select <include refid="allColumnwithalertflag" /> from phb_product_bid a left join phb_asset_product b on a.product_sn=b.product_sn
		left join (select ia.alert_deviceid, ia.alert_product from phb_investment_alert ia where  ia.alert_deviceid = #{muid} ) alert on(a.bid_sn=alert.alert_product)
		<include refid="dynamicWhere" />
		<include refid="dynamicOrderBy" />
		limit ${sno-1},${eno}
	</if>
	<!-- æ— orderby -->
	<if test="sno!=null and eno!=null and orderBy==null">
		select <include refid="allColumnwithalertflag" /> from phb_product_bid a left join phb_asset_product b on a.product_sn=b.product_sn
		left join (select ia.alert_deviceid, ia.alert_product from phb_investment_alert ia where  ia.alert_deviceid = #{muid} ) alert on(a.bid_sn=alert.alert_product)
		<include refid="dynamicWhere" />
		limit ${sno-1},${eno}
	</if>
  </sql>	
  
</mapper>