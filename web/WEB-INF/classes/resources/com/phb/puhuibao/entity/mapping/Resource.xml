<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.phb.puhuibao.entity.Resource">
  <!-- RESOURCE RESULTMAP -->
  <resultMap id="resourceResultMap" type="com.phb.puhuibao.entity.Resource">
    <id property="resourceId" column="resource_id" jdbcType="INTEGER" />
    <result property="mUserId" column="m_user_id" jdbcType="INTEGER" />
	<result property="name" column="name" jdbcType="VARCHAR" />
    <result property="price" column="price" jdbcType="DECIMAL" />
    <result property="number" column="number" jdbcType="INTEGER" />
	<result property="address" column="address" jdbcType="VARCHAR" />
    <result property="typeId" column="type_id" jdbcType="INTEGER" />
    <result property="category" column="category" jdbcType="TINYINT" />
    <result property="status" column="status" jdbcType="TINYINT" />
    <result property="publishTime" column="publish_time" jdbcType="VARCHAR" />
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
	<result property="distance" column="distance" jdbcType="DECIMAL" />
	<result property="resourceDesc" column="resource_desc" jdbcType="LONGVARCHAR" />
    <result property="method" column="method" jdbcType="TINYINT" />
    <result property="viewedcount" column="viewedcount" jdbcType="INTEGER" />
   
    
  </resultMap>

  <!-- RESOURCE INSERT -->
  <insert id="insert" useGeneratedKeys="true" keyProperty="resourceId" parameterType="com.phb.puhuibao.entity.Resource">
    insert into phb_resource (<include refid="allapplColumn"/>) <include refid="allapplColumnVar"/>
  </insert>
  <!-- RESOURCE UPDATE -->
  <update id="update" parameterType="com.phb.puhuibao.entity.Resource">
		update phb_resource
		<trim prefix=" SET " prefixOverrides=",">
			<if test="resourceId != null">
				  ,resource_id=#{resourceId,jdbcType=INTEGER}
			</if>
			<if test="name != null">
				  ,name=#{name,jdbcType=VARCHAR}
			</if>
			<if test="price != null">
				  ,price=#{price,jdbcType=DECIMAL}
			</if>
			<if test="number != null">
				  ,number=#{number,jdbcType=INTEGER}
			</if>
			<if test="address != null">
				  ,address=#{address,jdbcType=VARCHAR}
			</if>
			<if test="typeId != null">
				  ,type_id=#{typeId,jdbcType=INTEGER}
			</if>
			<if test="category != null">
				  ,category=#{category,jdbcType=TINYINT}
			</if>
			<if test="status != null">
				  ,status=#{status,jdbcType=TINYINT}
			</if>
			<if test="publishTime != null">
				  ,publish_time=#{publishTime,jdbcType=VARCHAR}
			</if>
			<if test="longitude != null">
				  ,longitude=#{longitude,jdbcType=DECIMAL}
			</if>
			<if test="latitude != null">
				  ,latitude=#{latitude,jdbcType=DECIMAL}
			</if>
			<if test="resourceDesc != null">
				  ,resource_desc=#{resourceDesc,jdbcType=LONGVARCHAR}
			</if>
			<if test="method != null">
				  ,method=#{method,jdbcType=TINYINT}
			</if>
			<if test="viewedcount != null">
				  ,viewedcount=#{viewedcount,jdbcType=INTEGER}
			</if>
			 
			
		</trim>
		where resource_id=#{resourceId}
  </update>

  <!-- RESOURCE DELETE -->
  <delete id="delete" parameterType="com.phb.puhuibao.entity.Resource">
    delete from phb_resource where resource_id=#{resourceId}
  </delete>
  
  <!-- RESOURCE SELECT -->
  <select id="query" parameterType="java.util.Map" resultMap="resourceResultMap">
    select <include refid="allColumn" /> from phb_resource a <include refid="dynamicWhere" />
  </select>
  <select id="findByPager" parameterType="java.util.Map" resultMap="resourceResultMap">
    <include refid="queryBody" />
  </select>
  <select id="findByPagerCount" parameterType="java.util.Map" resultType="int" >
	select count(1) from phb_resource a left join phb_mobile_user b on a.m_user_id=b.m_user_id <include refid="dynamicWhere" />
  </select>
  <select id="unique" parameterType="java.util.Map" resultMap="resourceResultMap" >
	select <include refid="allColumn" />,distance(a.longitude,a.latitude, ${longitude}, ${latitude}) distance from phb_resource a left join phb_mobile_user b on a.m_user_id=b.m_user_id <include refid="dynamicWhere" /> limit 1
  </select>
  <select id="getById" parameterType="java.util.Map" resultMap="resourceResultMap">
	select <include refid="allColumn" /> from phb_resource a left join phb_mobile_user b on a.m_user_id=b.m_user_id where resource_id=#{resourceId}
  </select>

  <!-- MySQL specific -->
  <sql id="allapplColumn">
    m_user_id,
	name,
    price,
    number,
	address,
    type_id,
    category,
    status,
    publish_time,
    create_time,
    longitude,
    latitude,
    resource_desc,
    method,
    valid_time 
  </sql>
  <sql id="allapplColumnVar">
	values(
			#{mUserId,jdbcType=INTEGER},
			#{name,jdbcType=VARCHAR},
			#{price,jdbcType=DECIMAL},
			#{number,jdbcType=INTEGER},
			#{address,jdbcType=VARCHAR},
			#{typeId,jdbcType=INTEGER},
			#{category,jdbcType=TINYINT},
			#{status,jdbcType=TINYINT},
			#{publishTime,jdbcType=VARCHAR},
			#{createTime,jdbcType=TIMESTAMP},
			#{longitude,jdbcType=DECIMAL},
			#{latitude,jdbcType=DECIMAL},
			#{resourceDesc,jdbcType=LONGVARCHAR},
			#{method,jdbcType=TINYINT},
			#{validTime,jdbcType=DATE} 
			
			
	)
  </sql>
  <sql id="allColumn">
    a.resource_id,
	a.m_user_id,
	b.age,
	b.constellation,
	b.photo,
	b.nickname,
    b.sex,
    b.liveness,
    b.level,
	a.name,
    a.price,
    a.number,
	a.address,
    a.type_id,
    a.category,
    a.status,
    a.publish_time,
    a.longitude,
    a.latitude,
    a.resource_desc,
    a.method,
    a.viewedcount 
  </sql>
  <sql id="dynamicWhere">
	<trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="name != null">
			AND a.name like concat('%',#{name},'%')
		</if>
		<if test="resourceId != null">
			AND a.resource_id = #{resourceId}
		</if>
		<if test="mUserId != null">
			AND a.m_user_id = #{mUserId}
		</if>
		<if test="typeId != null">
			AND a.type_id = #{typeId}
		</if>
		<if test="status != null">
			AND a.status = #{status}
		</if>
		<if test="gnumber != null">
			AND a.number  <![CDATA[>]]> #{gnumber}
		</if>
		<if test="gpublishTime != null">
			AND a.publish_time <![CDATA[>]]> #{gpublishTime}
		</if>
		<if test="lpublishTime != null">
			AND a.publish_time <![CDATA[<]]> #{lpublishTime}
		</if>
		<if test="lvalidTime != null">
			AND a.valid_time <![CDATA[<]]> #{lvalidTime}
		</if>
		<if test="ldistance != null">
			AND distance(a.longitude,a.latitude, ${longitude}, ${latitude}) <![CDATA[<]]> #{ldistance}
		</if>
		<if test="category != null">
			AND a.category = #{category}
		</if>
		<if test="sex != null">
			AND b.sex = #{sex}
		</if>
		<if test="level != null">
			AND b.level = #{level}
		</if>
		<if test="liveness != null">
			AND b.liveness = #{liveness}
		</if>
		<if test="keyword != null">
			AND a.name   like concat('%',#{keyword},'%')
		 
		</if>
	</trim>
  </sql>
  <sql id="dynamicOrderBy">
	<if test="orderBy!=null">
		order by ${orderBy}
		<if test="order!=null">
			${order}
		</if>
	</if>
  </sql>

  <sql id="queryBody">
	<if test="sno!=null and eno!=null and orderBy!=null">
		select <include refid="allColumn" />
		<if test="longitude!=null">
		,distance(a.longitude,a.latitude, ${longitude}, ${latitude}) distance
		</if>
		 from phb_resource a left join phb_mobile_user b on a.m_user_id=b.m_user_id
		<include refid="dynamicWhere" />
		<include refid="dynamicOrderBy" />
		limit ${sno-1},${eno}
	</if>
	<!-- æ— orderby -->
	<if test="sno!=null and eno!=null and orderBy==null">
		select <include refid="allColumn" />
		<if test="longitude!=null">
		,distance(a.longitude,a.latitude, ${longitude}, ${latitude}) distance
		</if>
		 from phb_resource a left join phb_mobile_user b on a.m_user_id=b.m_user_id
		<include refid="dynamicWhere" />
		limit ${sno-1},${eno}
	</if>
  </sql>	
  
</mapper>