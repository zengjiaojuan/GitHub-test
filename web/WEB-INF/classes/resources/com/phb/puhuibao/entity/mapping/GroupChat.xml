<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.phb.puhuibao.entity.GroupChat">
  <resultMap id="resourceResultMap" type="com.phb.puhuibao.entity.GroupChat">
     
    <result property="groupId"               column="group_id"            jdbcType="VARCHAR" />
    <result property="groupName"             column="group_name"          jdbcType="VARCHAR" />
    <result property="groupDescscription"    column="group_descscription" jdbcType="VARCHAR" />
	<result property="isPublic"              column="is_public"           jdbcType="INTEGER" />
	<result property="membersOnly"           column="members_only"        jdbcType="INTEGER" />
	<result property="allowInvites"          column="allow_invites"       jdbcType="INTEGER" />
	<result property="maxUsers"              column="max_users"           jdbcType="INTEGER" />
	<result property="affiliationsCount"     column="affiliations_count"  jdbcType="INTEGER" />
	<result property="affiliations"          column="affiliations"        jdbcType="VARCHAR" />
	<result property="groupOwner"            column="group_owner"         jdbcType="VARCHAR" />
	<result property="groupOwnerid"          column="group_ownerid"  jdbcType="INTEGER" />
	<result property="member"                column="member"              jdbcType="VARCHAR" />
	<result property="buildTime"             column="build_time"          jdbcType="TIMESTAMP" />
  </resultMap>
  
  <!-- RESOURCE INSERT -->
  <insert id="insert" useGeneratedKeys="true"   parameterType="com.phb.puhuibao.entity.GroupChat">
    insert into phb_groupchat (<include refid="allapplColumn"/>) <include refid="allapplColumnVar"/>
  </insert>
  
   
  
  <!-- RESOURCE DELETE -->
  <delete id="delete" parameterType="java.util.Map">
    delete  from phb_groupchat   <include refid="dynamicWhere" />
  </delete>
  
  <!-- RESOURCE SELECT -->
  <select id="query" parameterType="java.util.Map" resultMap="resourceResultMap">
    select <include refid="allColumn" /> 
    from phb_groupchat 
    <include refid="dynamicWhere" />
  </select>
  <select id="findByPager" parameterType="java.util.Map" resultMap="resourceResultMap">
    <include refid="queryBody" />
  </select>
  <select id="findByPagerCount" parameterType="java.util.Map" resultType="int" >
	select count(1) from phb_groupchat <include refid="dynamicWhere" />
  </select>
  <select id="unique" parameterType="java.util.Map" resultMap="resourceResultMap" >
	 select <include refid="allColumn" /> from phb_groupchat 
	 <include refid="dynamicWhere" /> 
	 <include refid="dynamicOrderBy" /> limit 1
  </select>
   <select id="getById" parameterType="java.util.Map" resultMap="resourceResultMap">
	select <include refid="allColumn" /> from phb_groupchat where group_id=#{groupId}
  </select>
 
  
<update id="update" parameterType="com.phb.puhuibao.entity.GroupChat">
		update phb_groupchat
		<trim prefix=" SET " prefixOverrides=",">
			<if test="groupName != null">
				  ,group_name=#{groupName,jdbcType=VARCHAR}
			</if>
			<if test="groupDescscription != null">
				  ,group_descscription=#{groupDescscription,jdbcType=VARCHAR}
			</if>
			<if test="isPublic != null">
				  ,is_public=#{isPublic,jdbcType=INTEGER}
			</if>
			<if test="membersOnly != null">
				  ,members_only=#{membersOnly,jdbcType=INTEGER}
			</if>
			<if test="allowInvites != null">
				  ,allow_invites=#{allowInvites,jdbcType=INTEGER}
			</if>
			<if test="maxUsers != null">
				  ,max_users=#{maxUsers,jdbcType=INTEGER}
			</if>
			<if test="affiliationsCount != null">
				  ,affiliations_count=#{affiliationsCount,jdbcType=INTEGER}
			</if>	
			<if test="groupOwner != null">
				  ,group_owner=#{groupOwner,jdbcType=VARCHAR}
			</if>
			<if test="groupOwnerid != null">
				  ,group_ownerid=#{groupOwnerid,jdbcType=INTEGER}
			</if>		
			
			<if test="member != null">
				  ,member=#{member,jdbcType=INTEGER}
			</if>	
 		 				 
		</trim>
		where group_id=#{groupId}  
  </update>

  
  
  

  
  <sql id="allapplColumn">
	group_id,
	group_name,
	group_descscription,
	is_public, 
	members_only,
	allow_invites,
	max_users,
	affiliations_count, 
	affiliations,
	group_owner,
	group_ownerid,
	member 
  </sql>
  
 
  <sql id="allapplColumnVar">
	values(
			#{groupId,                       jdbcType=VARCHAR},
			#{groupName,                     jdbcType=VARCHAR},
			#{groupDescscription,            jdbcType=INTEGER},
			#{isPublic,                      jdbcType=INTEGER}, 
			#{membersOnly,                   jdbcType=INTEGER},
			#{allowInvites,                  jdbcType=INTEGER},
			#{maxUsers,                      jdbcType=INTEGER},
			#{affiliationsCount,             jdbcType=INTEGER}, 
			#{affiliations,                  jdbcType=VARCHAR},
			#{groupOwner,                    jdbcType=VARCHAR},
			#{groupOwnerid,                  jdbcType=INTEGER},
			#{member,                        jdbcType=VARCHAR}
	      )
  </sql>
  <sql id="allColumn">
  
	group_id,
	group_name,
	group_descscription,
	is_public, 
	members_only,
	allow_invites,
	max_users,
	affiliations_count, 
	affiliations,
	group_owner,
	group_ownerid,
	member,
	build_time 
 
  </sql>
  
  
  <sql id="dynamicWhere">
	<trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="groupId != null">
			AND group_id = #{groupId}
		</if>
		<if test="groupOwner != null">
			AND group_owner = #{groupOwner}
		</if>
		<if test="groupName != null">
			AND group_name like concat('%',#{groupName},'%')
		</if>
		<if test="groupOwnerid != null">
			AND group_ownerid = #{groupOwnerid}
		</if>
		<if test="allmygroups != null">
			 
			AND member   like concat('%',#{allmygroups},'%')
		</if>
 
 
	</trim>
  </sql>
  <sql id="dynamicOrderBy">
	<if test="orderBy!=null">
		order by ${orderBy}
		<if test="order!=null">
			${order}
		</if>
	</if>
  </sql>

  <sql id="queryBody">
	<if test="sno!=null and eno!=null and orderBy!=null">
		select <include refid="allColumn" /> from phb_groupchat f
		<include refid="dynamicWhere" />
		<include refid="dynamicOrderBy" />
		limit ${sno-1},${eno}
	</if>
  	<!-- 无orderby -->
	<if test="sno!=null and eno!=null and orderBy==null">
		select <include refid="allColumn" /> from phb_groupchat f
		<include refid="dynamicWhere" />
		limit ${sno-1},${eno}
	</if>
  </sql>
</mapper>