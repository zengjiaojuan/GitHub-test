<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.phb.puhuibao.entity.Evaluate">
  <!-- RESOURCE RESULTMAP -->
  <resultMap id="resourceResultMap" type="com.phb.puhuibao.entity.Evaluate">
    <id property="evaluateId" column="evaluate_id" jdbcType="INTEGER" />
    <result property="mUserId" column="m_user_id" jdbcType="INTEGER" />
    <result property="resourceId" column="resource_id" jdbcType="INTEGER" />
 
	<result property="content" column="content" jdbcType="VARCHAR" />
    <result property="score" column="status" jdbcType="TINYINT" />
	<result property="name" column="name" jdbcType="VARCHAR" />
	<result property="mUserName" column="M_USER_NAME" jdbcType="VARCHAR" />
	<result property="photo" column="photo" jdbcType="VARCHAR" />
    <result property="createTime" column="create_time" jdbcType="DATE" />
    <result property="toUserId" column="to_user_id" jdbcType="INTEGER" /> 
  </resultMap>

  <!-- RESOURCE INSERT -->
  <insert id="insert" useGeneratedKeys="true"   parameterType="com.phb.puhuibao.entity.Evaluate">
    insert into phb_evaluate (<include refid="allapplColumn"/>) <include refid="allapplColumnVar"/>
  </insert>
  <!-- RESOURCE UPDATE -->
  <update id="update" parameterType="com.phb.puhuibao.entity.Evaluate">
		update phb_evaluate
		<trim prefix=" SET " prefixOverrides=",">
			<if test="content != null">
				  ,content=#{content,jdbcType=VARCHAR}
			</if>
			<if test="score != null">
				  ,score=#{score,jdbcType=TINYINT}
			</if>
		</trim>
		where evaluate_id=#{evaluateId}
  </update>

  <!-- RESOURCE DELETE -->
  <delete id="delete" parameterType="com.phb.puhuibao.entity.Evaluate">
    delete from phb_evaluate where evaluate_id=#{evaluateId}
  </delete>
  
  <!-- RESOURCE SELECT -->
  <select id="query" parameterType="java.util.Map" resultMap="resourceResultMap">
    select <include refid="allColumn" /> from phb_evaluate a left join phb_resource b on a.resource_id=b.resource_id left join phb_mobile_user c on a.m_user_id=c.m_user_id <include refid="dynamicWhere" />
  </select>
  <select id="findByPager" parameterType="java.util.Map" resultMap="resourceResultMap">
    <include refid="queryBody" />
  </select>
  <select id="findByPagerCount" parameterType="java.util.Map" resultType="int" >
	select count(1) from phb_evaluate a left join phb_resource b on a.resource_id=b.resource_id left join phb_mobile_user c on a.m_user_id=c.m_user_id <include refid="dynamicWhere" />
  </select>
  <select id="getById" parameterType="java.util.Map" resultMap="resourceResultMap">
	select <include refid="allColumn" /> from phb_evaluate a left join phb_resource b on a.resource_id=b.resource_id left join phb_mobile_user c on a.m_user_id=c.m_user_id where evaluate_id=#{evaluateId}
  </select>
 <select id="unique" parameterType="java.util.Map" resultMap="resourceResultMap" >
	select <include refid="allColumn" /> from phb_evaluate a left join phb_resource b on a.resource_id=b.resource_id left join phb_mobile_user c on a.m_user_id=c.m_user_id <include refid="dynamicWhere" /> limit 1
  </select>
  <!-- MySQL specific -->
  <sql id="allapplColumn">
    m_user_id,
    resource_id,
	content,
    score,
 
    to_user_id
  </sql>
  <sql id="allapplColumnVar">
	values(
			#{mUserId,jdbcType=INTEGER},
			#{resourceId,jdbcType=INTEGER},
			#{content,jdbcType=VARCHAR},
			#{score,jdbcType=TINYINT},
		 
			#{toUserId,jdbcType=INTEGER}
	)
  </sql>
  <sql id="allColumn">
	a.content,
    a.score,
    a.m_user_id,
    a.to_user_id,
    b.name,
    c.m_user_name,
    c.photo,
    a.create_time 
  </sql>
  <sql id="dynamicWhere">
	<trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="mUserId != null">
			AND a.m_user_id = #{mUserId}
		</if>
		<if test="resourceId != null">
			AND a.resource_id = #{resourceId}
		</if>
		<if test="toUserId != null">
			AND a.to_user_id = #{toUserId}
		</if>
		
	</trim>
  </sql>
  <sql id="dynamicOrderBy">
	<if test="orderBy!=null">
		order by a.${orderBy}
		<if test="order!=null">
			${order}
		</if>
	</if>
  </sql>

  <sql id="queryBody">
	<if test="sno!=null and eno!=null and orderBy!=null">
		select <include refid="allColumn" /> from phb_evaluate a left join phb_resource b on a.resource_id=b.resource_id left join phb_mobile_user c on a.m_user_id=c.m_user_id
		<include refid="dynamicWhere" />
		<include refid="dynamicOrderBy" />
		limit ${sno-1},${eno}
	</if>
	<!-- æ— orderby -->
	<if test="sno!=null and eno!=null and orderBy==null">
		select <include refid="allColumn" /> from phb_evaluate a left join phb_resource b on a.resource_id=b.resource_id left join phb_mobile_user c on a.m_user_id=c.m_user_id
		<include refid="dynamicWhere" />
		limit ${sno-1},${eno}
	</if>
  </sql>	
  
</mapper>