<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.phb.puhuibao.entity.MuserFollow">
  <resultMap id="resourceResultMap" type="com.phb.puhuibao.entity.MuserFollow">
     
    <result property="muserId"             column="m_user_id"            jdbcType="INTEGER" />
    <result property="followUser"          column="follow_user"          jdbcType="INTEGER" />
	<result property="followUname"         column="follow_uname"         jdbcType="VARCHAR" />
	<result property="followReporttype"    column="follow_reporttype"    jdbcType="VARCHAR" />
	<result property="followReportcomment" column="follow_reportcomment" jdbcType="VARCHAR" />
	<result property="followIsblocked"     column="follow_isblocked"     jdbcType="VARCHAR" />	
	<result property="followTime"          column="follow_time"          jdbcType="TIMESTAMP" />
	<result property="commentTime"         column="comment_time"         jdbcType="TIMESTAMP" />
	<result property="photo"               column="photo"                jdbcType="VARCHAR" />
	<result property="nickname"            column="nickname"             jdbcType="VARCHAR" />
	<result property="level"               column="level"                jdbcType="INTEGER" />
	<result property="sex"                 column="sex"                  jdbcType="INTEGER" />  
 
  </resultMap>
  
  <!-- RESOURCE INSERT -->
  <insert id="insert" useGeneratedKeys="true"   parameterType="com.phb.puhuibao.entity.MuserFollow">
    insert into phb_muser_follow (<include refid="allapplColumn"/>) <include refid="allapplColumnVar"/>
  </insert>
  
   
  
  <!-- RESOURCE DELETE -->
  <delete id="delete" parameterType="java.util.Map">
    delete  from phb_muser_follow   <include refid="dynamicWhere" />
  </delete>
  
  <!-- RESOURCE SELECT -->
  <select id="query" parameterType="java.util.Map" resultMap="resourceResultMap">
    select <include refid="allColumn" /> 
    from phb_muser_follow f
    left join phb_mobile_user u on f.follow_user = u.m_user_id
    <include refid="dynamicWhere" />
  </select>
  <select id="findByPager" parameterType="java.util.Map" resultMap="resourceResultMap">
    <include refid="queryBody" />
  </select>
  <select id="findByPagerCount" parameterType="java.util.Map" resultType="int" >
	select count(1) from phb_muser_follow <include refid="dynamicWhere" />
  </select>
  <select id="unique" parameterType="java.util.Map" resultMap="resourceResultMap" >
	select <include refid="allColumn" /> 
	from phb_muser_follow f
	left join phb_mobile_user u on f.follow_user = u.m_user_id
	<include refid="dynamicWhere" />
	 <include refid="dynamicOrderBy" /> limit 1
  </select>
 
  
<update id="update" parameterType="com.phb.puhuibao.entity.MuserFollow">
		update phb_muser_follow
		<trim prefix=" SET " prefixOverrides=",">
			<if test="followUname != null">
				  ,follow_uname=#{followUname,jdbcType=VARCHAR}
			</if>
			<if test="followReporttype != null">
				  ,follow_reporttype=#{followReporttype,jdbcType=VARCHAR}
			</if>
			<if test="followReportcomment != null">
				  ,follow_reportcomment=#{followReportcomment,jdbcType=VARCHAR}
			</if>
			<if test="followIsblocked != null">
				  ,follow_isblocked=#{followIsblocked,jdbcType=VARCHAR}
			</if>
		 		
			<if test="commentTime != null">
				  ,comment_time=#{commentTime,jdbcType=VARCHAR}
			</if>								 
		</trim>
		where m_user_id=#{muserId} and follow_user=#{followUser}
  </update>

  <!-- MySQL specific -->
  <sql id="allapplColumn">
	m_user_id,
	follow_user,
	follow_uname,
	follow_time 
  </sql>
  <sql id="allapplColumnVar">
	values(
			#{muserId,   jdbcType=VARCHAR},
			#{followUser, jdbcType=VARCHAR},
			#{followUname, jdbcType=VARCHAR},
			#{followTime,     jdbcType=TIMESTAMP} 
	      )
  </sql>
  <sql id="allColumn">
  
	f.m_user_id,
	f.follow_user,
	f.follow_uname,
	f.follow_reporttype,
	f.follow_reportcomment,
	f.follow_isblocked,
	f.follow_time,
	u.photo,
	f.follow_uname nickname,
	u.sex,
	u.level 
  </sql>
  <sql id="dynamicWhere">
	<trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="muserId != null">
			AND f.m_user_id = #{muserId}
		</if>
		<if test="followUser != null">
			AND f.follow_user = #{followUser}
		</if>
		
		<!--currentuserId 自己关注别人  -->
		<if test="currentuserId != null">
			AND f.m_user_id = #{currentuserId}
		</if>
		
		<if test="currentuserIdfollow != null">
			AND f.follow_user = #{currentuserIdfollow}
		</if>
		 
		<if test="findfriends != null">
			AND f.follow_user in(select b.m_user_id from phb_muser_follow b where  b.follow_user = #{currentuserId} and (b.follow_isblocked is null or b.follow_isblocked='0')) and  f.follow_user not in (select follow_user from phb_muser_follow where m_user_id= #{currentuserId} and follow_isblocked ='1')
		</if>	
		<if test="findfollowings != null">
			and (f.follow_isblocked is null or f.follow_isblocked='0')
		</if>
		<if test="findfans != null">
			and (f.follow_isblocked is null or f.follow_isblocked='0')
		</if>	
		<if test="findblocked != null">
			and   f.follow_isblocked='1'
		</if>
		
		<if test="dmuserId != null">
			AND m_user_id = #{dmuserId}
		</if>
		
        <if test="dfollowUser != null">
			AND follow_user = #{dfollowUser}
		</if>		
		
		 
 
	</trim>
  </sql>
  <sql id="dynamicOrderBy">
	<if test="orderBy!=null">
		order by ${orderBy}
		<if test="order!=null">
			${order}
		</if>
	</if>
  </sql>

  <sql id="queryBody">
	<if test="sno!=null and eno!=null and orderBy!=null">
		select <include refid="allColumn" /> from phb_muser_follow
		<include refid="dynamicWhere" />
		<include refid="dynamicOrderBy" />
		limit ${sno-1},${eno}
	</if>
  	<!-- 无orderby -->
	<if test="sno!=null and eno!=null and orderBy==null">
		select <include refid="allColumn" /> from phb_muser_follow
		<include refid="dynamicWhere" />
		limit ${sno-1},${eno}
	</if>
  </sql>
</mapper>