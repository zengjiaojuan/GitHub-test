<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.phb.puhuibao.entity.UserAccount">

  <!-- RESOURCE RESULTMAP -->

  <resultMap id="resourceResultMap" type="com.phb.puhuibao.entity.UserAccount">
    <id property="accountId" column="account_id" jdbcType="INTEGER" />
    <result property="mUserId" column="M_USER_ID" jdbcType="INTEGER" />
	<result property="mUserName" column="M_USER_NAME" jdbcType="VARCHAR" />
    <result property="amount" column="amount" jdbcType="DECIMAL" />
	<result property="processType" column="process_type" jdbcType="TINYINT" />
	<result property="adminUser" column="admin_user" jdbcType="VARCHAR" />
	<result property="adminNote" column="admin_note" jdbcType="VARCHAR" />
	<result property="userNote" column="user_note" jdbcType="VARCHAR" />
    <result property="isPaid" column="is_paid" jdbcType="TINYINT" />
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP" />
    <result property="paidTime" column="paid_time" jdbcType="TIMESTAMP" />
	<result property="orderId" column="order_id" jdbcType="CHAR" />
  </resultMap>

  <!-- RESOURCE INSERT -->
  <insert id="insert" useGeneratedKeys="true" keyProperty="accountId" parameterType="com.phb.puhuibao.entity.UserAccount">
    insert into phb_muser_account (<include refid="allapplColumn"/>) <include refid="allapplColumnVar"/>
  </insert>
  <!-- RESOURCE UPDATE -->
  <update id="update" parameterType="com.phb.puhuibao.entity.UserAccount">
		update phb_muser_account
		<trim prefix=" SET " prefixOverrides=",">
			<if test="amount != null">
				  ,amount=#{amount,jdbcType=DECIMAL}
			</if>
			<if test="processType != null">
				  ,process_type=#{processType,jdbcType=TINYINT}
			</if>
			<if test="adminUser != null">
				  ,admin_user=#{adminUser,jdbcType=VARCHAR}
			</if>
			<if test="adminNote != null">
				  ,admin_note=#{adminNote,jdbcType=VARCHAR}
			</if>
			<if test="userNote != null">
				  ,user_note=#{userNote,jdbcType=VARCHAR}
			</if>
			<if test="isPaid != null">
				  ,is_paid=#{isPaid,jdbcType=TINYINT}
			</if>
			<if test="orderId != null">
				  ,order_id=#{orderId,jdbcType=CHAR}
			</if>
		</trim>
		where account_id=#{accountId}
  </update>

  <!-- RESOURCE DELETE -->
  <delete id="delete" parameterType="com.phb.puhuibao.entity.UserAccount">
    delete from phb_muser_account where account_id = #{accountId}
  </delete>
  
  <!-- RESOURCE SELECT -->
  <select id="query" parameterType="java.util.Map" resultMap="resourceResultMap">
    select <include refid="allColumn" /> from phb_muser_account a left join phb_mobile_user b on a.m_user_id=b.m_user_id <include refid="dynamicWhere" />
  </select>
  <select id="findByPager" parameterType="java.util.Map" resultMap="resourceResultMap">
    <include refid="queryBody" />
  </select>
  <select id="findByPagerCount" parameterType="java.util.Map" resultType="int" >
	select count(1) from phb_muser_account a left join phb_mobile_user b on a.m_user_id=b.m_user_id <include refid="dynamicWhere" />
  </select>
  <select id="unique" parameterType="java.util.Map" resultMap="resourceResultMap" >
	select <include refid="allColumn" /> from phb_muser_account a left join phb_mobile_user b on a.m_user_id=b.m_user_id <include refid="dynamicWhere" /> limit 1
  </select>
  <select id="getById" parameterType="java.util.Map" resultMap="resourceResultMap">
	select <include refid="allColumn" /> from phb_muser_account a left join phb_mobile_user b on a.m_user_id=b.m_user_id where a.account_id=#{accountId}
  </select>

  <!-- MySQL specific -->
  <sql id="allapplColumn">
    M_USER_ID,
    amount,
    process_type,
    user_note,
    create_time,
    order_id
  </sql>
  <sql id="allapplColumnVar">
	values(
			#{mUserId,jdbcType=INTEGER},
			#{amount,jdbcType=DECIMAL},
			#{processType,jdbcType=TINYINT},
			#{userNote,jdbcType=VARCHAR},
			#{createTime,jdbcType=TIMESTAMP},
			#{orderId,jdbcType=CHAR}
	)
  </sql>
  <sql id="allColumn">
    a.account_id,
    a.m_user_id,
    b.m_user_name,
    a.amount,
    a.process_type,
    a.admin_user,
    a.admin_note,
    a.user_note,
    a.is_paid,
    a.create_time,
    a.paid_time,
    a.order_id
  </sql>
  <sql id="dynamicWhere">
	<trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="mUserId != null">
			AND a.m_user_id = #{mUserId}
		</if>
		<if test="isPaid != null">
			AND a.is_paid = #{isPaid}
		</if>
		<if test="orderId != null">
			AND a.order_id = #{orderId}
		</if>
		<if test="processType != null">
			AND a.process_type = #{processType}
		</if>
		<if test="gepaidTime != null">
			AND a.paid_time <![CDATA[>=]]> #{gepaidTime}
		</if>
		<if test="lpaidTime != null">
			AND a.paid_time <![CDATA[<]]> #{lpaidTime}
		</if>
	</trim>
  </sql>
  <sql id="dynamicOrderBy">
	<if test="orderBy!=null">
		order by ${orderBy}
		<if test="order!=null">
			${order}
		</if>
	</if>
  </sql>

  <sql id="queryBody">
	<if test="sno!=null and eno!=null and orderBy!=null">
		select <include refid="allColumn" /> from phb_muser_account a left join phb_mobile_user b on a.m_user_id=b.m_user_id
		<include refid="dynamicWhere" />
		<include refid="dynamicOrderBy" />
		limit ${sno-1},${eno}
	</if>
	<!-- æ— orderby -->
	<if test="sno!=null and eno!=null and orderBy==null">
		select <include refid="allColumn" /> from phb_muser_account a left join phb_mobile_user b on a.m_user_id=b.m_user_id
		<include refid="dynamicWhere" />
		limit ${sno-1},${eno}
	</if>
  </sql>	
  
</mapper>