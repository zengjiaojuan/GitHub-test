<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans.xsd
        http://www.springframework.org/schema/mvc 
        http://www.springframework.org/schema/mvc/spring-mvc.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context.xsd
        http://www.springframework.org/schema/tx
        http://www.springframework.org/schema/tx/spring-tx.xsd
      http://www.springframework.org/schema/aop
      http://www.springframework.org/schema/aop/spring-aop.xsd"
	default-autowire="byName">
	<!-- 强制使用CGLIB代理 -->
	<aop:aspectj-autoproxy proxy-target-class="true" />
	<!-- 使用annotation 自动注册bean 不包含也不能包含controller，controller只能在springmvc -->
	<context:component-scan
		base-package="com.idp.**.service.impl,com.idap.**.handler.impl,com.idp.**.dao,
	          com.idap.**.service.impl,com.idap.**.dao,
	          com.phb.**.service.impl,com.phb.**.dao">
		<context:exclude-filter type="annotation"
			expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 多数据库sql语句差异处理 -->
	<bean id="sqlPartResolverDaoFactory"
		class="com.idp.pub.sqlresolver.dao.SqlPartResolverDaoStrategyFactory">
		<property name="daoStrategyMap">
			<map>
				<entry key="oracle">
					<bean class="com.idp.pub.sqlresolver.dao.OraclePartResolverDaoStrategy" />
				</entry>
			</map>
		</property>
	</bean>
	<!-- 事务数据排它锁策略配置 -->
	<bean id="excLockerKeyDaoFactory" class="com.idp.pub.serverlocker.dao.LockerDaoStrategyFactory">
		<property name="chioceKey" value="meELocker" />
		<property name="daoStrategyMap">
			<map>
				<entry key="meELocker">
					<bean class="com.idp.pub.serverlocker.dao.MeELockerServicesStrategy" />
				</entry>
			</map>
		</property>
	</bean>
	<!-- 数据库主键策略配置 -->
	<bean id="generateKeyDaoFactory"
		class="com.idp.pub.generatekey.dao.GenerateKeyDaoStrategyFactory">
		<property name="chioceKey" value="uuid" />
		<property name="daoStrategyMap">
			<map>
				<entry key="uuid">
					<bean class="com.idp.pub.generatekey.dao.UuIdGenerateKeyMangerDao" />
				</entry>
			</map>
		</property>
	</bean>

	<bean id="appContext" class="com.idp.pub.context.AppContext">
		<property name="debuging" value="${app.debuging}"></property>
		<property name="authecation" value="${app.authecation}"></property>
		<property name="appName" value="${app.appName}"></property>
		<property name="siteCode" value="${app.siteCode}"></property>
		<property name="version" value="${app.version}"></property>
		<property name="baseUrl" value="${app.baseService.url}"></property>
		<property name="dbUrl" value="${jdbc.url}" />
		<property name="userName" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="about" value="${app.about}"></property>
		<property name="mailFrom" value="${mail.smtp.from}"></property>
		<property name="investmentStatus" value="${default.investment.status}"></property>
		<property name="payOnline" value="${default.pay.online}"></property>
		<property name="experienceAmount" value="${default.experience.amount}"></property>
		<property name="experiencePeriod" value="${default.experience.period}"></property>
		<property name="withdrawAmount" value="${default.withdraw.amount}"></property>
		<property name="redpacketAmount" value="${redpacket.amount}"></property>
		<property name="inviteRedpacketAmount" value="${invite.redpacket.amount}"></property>
		<property name="redpacketPeriod" value="${redpacket.period}"></property>
		<property name="deductionRate" value="${deduction.rate}"></property>
		<property name="autoBidAmount" value="${auto.bid.amount}"></property>
		<property name="autoBidPeriod" value="${auto.bid.period}"></property>
		<property name="parentCommissionRate" value="${parent.commission.rate}"></property>
		<property name="grandparentCommissionRate" value="${grandparent.commission.rate}"></property>
		<property name="upMoney" value="${scratch.up.money}"></property>
		<property name="userIP" value="101.200.82.182"></property>
		<property name="levelMap">
			<map>
				<entry key="1"><value>500</value></entry>
				<entry key="2"><value>2000</value></entry>
				<entry key="3"><value>10000</value></entry>
				<entry key="4"><value>100000</value></entry>
				<entry key="5"><value>500000</value></entry>
			</map>
		</property>
		<property name="contextPath" value="${context.path}"></property>
	</bean>
	
	<bean id="commons" class="com.idap.web.common.controller.Commons">
		<property name="addrServerIp" value="${dataproc.datamatch.addrServerIp}"></property>
		<property name="addrServerPort" value="${dataproc.datamatch.addrServerPort}"></property>
		<property name="fileUploadPath" value="${dataproc.datadef.fileUploadPath}"></property>
		<property name="fileDownPath" value="${dataproc.dataset.fileDownPath}"></property>
		<property name="fileMatchInPath" value="${dataproc.datamatch.fileMatchInPath}"></property>
		<property name="fileMatchOutPath" value="${dataproc.datamatch.fileMatchOutPath}"></property>
		<property name="fileMatchLog" value="${dataproc.datamatch.fileMatchLog}"></property>
		<property name="adImageUploadPath" value="${ad.image.upload.path}"></property>
		<property name="projectName" value="${service.projectName}"></property>
	</bean>
	<bean id="mailSender" class="org.springframework.mail.javamail.JavaMailSenderImpl">
	    <property name="host" value="${mail.smtp.host}"></property>
	    <property name="javaMailProperties" >
	        <props>
	            <prop key="mail.smtp.auth">${mail.smtp.auth}</prop> 
	            <prop key="mail.smtp.timeout">${mail.smtp.timeout}</prop>       
	        </props>
	    </property>
	    <property name="username" value="${mail.smtp.username}"></property>
	    <property name="password" value="${mail.smtp.password}"></property>
	</bean>
</beans>