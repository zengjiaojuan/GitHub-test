<?xml version="1.0" encoding="UTF-8" ?>

<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.phb.puhuibao.entity.ExperienceProduct">

  <!-- RESOURCE RESULTMAP -->

  <resultMap id="resourceResultMap" type="com.phb.puhuibao.entity.ExperienceProduct">
    <result property="productId" column="product_id" jdbcType="TINYINT" />
    <result property="productName" column="product_name" jdbcType="VARCHAR"/>
    <result property="productSN" column="product_sn" jdbcType="VARCHAR"/>
    <result property="annualizedRate" column="annualized_rate" jdbcType="DECIMAL" />
    <result property="period" column="period" jdbcType="TINYINT" />
    <result property="totalAmount" column="total_amount" jdbcType="INTEGER" />
    <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
  </resultMap>

  <!-- RESOURCE INSERT -->
  <insert id="insert" parameterType="com.phb.puhuibao.entity.ExperienceProduct">
    insert into phb_experience_product (<include refid="allapplColumn"/>) <include refid="allapplColumnVar"/>
  </insert>
  <!-- RESOURCE UPDATE -->
  <update id="update" parameterType="com.phb.puhuibao.entity.ExperienceProduct">
		update phb_experience_product
		<trim prefix=" SET " prefixOverrides=",">
			<if test="productName != null">
				  ,product_name=#{productName,jdbcType=VARCHAR}
			</if>
			<if test="productSN != null">
				  ,product_sn=#{productSN,jdbcType=VARCHAR}
			</if>
			<if test="annualizedRate != null">
				  ,annualized_rate=#{annualizedRate,jdbcType=DECIMAL}
			</if>
				  ,period=#{period,jdbcType=TINYINT}
			<if test="totalAmount != null">
				  ,total_amount=#{totalAmount,jdbcType=BIGINT}
			</if>
		</trim>
		where product_id=#{productId}
  </update>

  <!-- RESOURCE DELETE -->
  <delete id="delete" parameterType="com.phb.puhuibao.entity.ExperienceProduct">
    delete from phb_experience_product where product_id = #{productId}
  </delete>
  
  <!-- RESOURCE SELECT -->
  <select id="query" parameterType="java.util.Map" resultMap="resourceResultMap">
    select <include refid="allColumn" /> from phb_experience_product <include refid="dynamicWhere" />
  </select>
  <select id="findByPager" parameterType="java.util.Map" resultMap="resourceResultMap">
    <include refid="queryBody" />
  </select>
  <select id="findByPagerCount" parameterType="java.util.Map" resultType="int" >
	select count(1) from phb_experience_product <include refid="dynamicWhere" />
  </select>
  <select id="unique" parameterType="java.util.Map" resultMap="resourceResultMap" >
	select <include refid="allColumn" /> from phb_experience_product <include refid="dynamicWhere" /> limit 1
  </select>
  <select id="getById" parameterType="java.util.Map" resultMap="resourceResultMap">
	select <include refid="allColumn" /> from phb_experience_product where product_id=#{productId}
  </select>

  <!-- MySQL specific -->
  <sql id="allapplColumn">
    product_name,
    product_sn,
    annualized_rate,
    period,
    total_amount
  </sql>
  <sql id="allapplColumnVar">
	values(
			#{productName,jdbcType=VARCHAR},
			#{productSN,jdbcType=VARCHAR},
			#{annualizedRate,jdbcType=DECIMAL},
			#{period,jdbcType=TINYINT},
			#{totalAmount,jdbcType=BIGINT}
	)
  </sql>
  <sql id="allColumn">
    product_id,
    product_name,
    product_sn,
    annualized_rate,
    period,
    total_amount
  </sql>
  <sql id="dynamicWhere">
	<trim prefix="WHERE" prefixOverrides="AND|OR">
		<if test="querykeyword != null">
			AND product_name like concat('%',#{querykeyword},'%') 
		</if>
		<if test="productSN != null">
			AND product_sn = #{productSN}
		</if>
	</trim>
  </sql>
  <sql id="dynamicOrderBy">
	<if test="orderBy!=null">
		order by ${orderBy}
		<if test="order!=null">
			${order}
		</if>
	</if>
  </sql>

  <sql id="queryBody">
	<if test="sno!=null and eno!=null and orderBy!=null">
		select <include refid="allColumn" /> from phb_experience_product
		<include refid="dynamicWhere" />
		<include refid="dynamicOrderBy" />
		limit ${sno-1},${eno}
	</if>
	<!-- æ— orderby -->
	<if test="sno!=null and eno!=null and orderBy==null">
		select <include refid="allColumn" /> from phb_experience_product
		<include refid="dynamicWhere" />
		limit ${sno-1},${eno}
	</if>
  </sql>	
  
</mapper>